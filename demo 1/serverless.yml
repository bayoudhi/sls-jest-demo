service: sls-jest-demo-1
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  httpApi:
    cors: true
  environment:
    TABLE_NAME: !Ref Table
    BUS_NAME: !Ref EventBus
    BUCKET_NAME: !Ref Bucket
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: !GetAtt Table.Arn
        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: !GetAtt EventBus.Arn
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource:
            Fn::Join:
              - ""
              - - "arn:aws:s3:::"
                - Ref: Bucket
                - "/*"

functions:
  create-todo:
    handler: src/functions/create-todo.handler
    events:
      - httpApi:
          path: /todos
          method: post
  backup-todo:
    handler: src/functions/backup-todo.handler
    events:
      - eventBridge:
          eventBus: !GetAtt EventBus.Name
          pattern:
            detail-type:
              - TodoCreated

resources:
  Resources:
    Table:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    Bucket:
      Type: AWS::S3::Bucket
    EventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:service}-${sls:stage}

  Outputs:
    TableName:
      Value: !Ref Table
    BusName:
      Value: !Ref EventBus
    BucketName:
      Value: !Ref Bucket

custom:
  exportOutputs:
    include:
      - TableName
      - BusName
      - BucketName
      - HttpApiUrl
    output:
      file: tests/exports.json
      format: json

plugins:
  - serverless-plugin-typescript
  - serverless-export-outputs
